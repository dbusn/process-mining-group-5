Note: Everything here starts counting from 1 instead of 0

Input: 
1.  og_list: A list of integers
Output: 
1.  cu_list: A list of cumulative sums for items in the input list
Function CumSum(lists)
1.  lg <- Number of terms in og_list
2.  For i = 1 to lg do:
3.    sum_term <- The sum of the first i terms in og_list
4.    cu_list[i] = sum_term
5.  Return cu_list

First part: Training
1. Compute time difference
2. Initialize 1st row’s time difference as 0
3. Count number of processes per case:concept:name
4. Append all counts into count list
5. For i in count list do
6. 	Create small list [1, 2, …, i]
7. 	Append small list into position list
8. Assign position list to position column of dataframe
9. If position of the process == 1:
10. 	Then initialize the time difference as 0
11. 	Else skip
12. Compute mean time difference per position
13. Append all mean time differences into mean time list
14. Initialize the time difference mean of the 1st position as 0
15. Initialize the time difference mean of maximum position as 0
16. For i in position list do
17. 	pred time list[i] = mean time list[i]
18. Assign pred time list to baseline predicted time column of dataframe

Second part: Validation/Testing
1. Compute time difference
2. Initialize 1st row’s time difference as 0
3. Count number of processes per case:concept:name
4. Append all counts into count list
5. For i in count list do
6. 	Create small list [1, 2, …, i]
7. 	Append small list into position list
8. Assign position list to position column of dataframe
9. If position of the process == 1:
10. 	Then initialize the time difference as 0
11. 	Else skip
12. Assign number of terms in mean time list (Reusing) to nr term
13. For i in position list do
14. 	if i <= nr term
15. 		Then pred time list[i] = mean time list[i]
16. 		Else pred time list[i] = 0
17. Assign pred time list to baseline predicted time column of dataframe 
